# Makefile.in generated automatically by automake 1.5 from Makefile.am.

# Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001
# Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

# Do not edit this file!
# It is automatically generated from Makefile.am.tmpl by gen_source_defs.pl

SHELL = @SHELL@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
prefix = @prefix@
exec_prefix = @exec_prefix@

bindir = @bindir@
sbindir = @sbindir@
libexecdir = @libexecdir@
datadir = @datadir@
sysconfdir = @sysconfdir@
sharedstatedir = @sharedstatedir@
localstatedir = @localstatedir@
libdir = @libdir@
infodir = @infodir@
mandir = @mandir@
includedir = @includedir@
oldincludedir = /usr/include
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
top_builddir = ..

ACLOCAL = @ACLOCAL@
AUTOCONF = @AUTOCONF@
AUTOMAKE = @AUTOMAKE@
AUTOHEADER = @AUTOHEADER@

INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_HEADER = $(INSTALL_DATA)
transform = @program_transform_name@
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_alias = @build_alias@
build_triplet = @build@
host_alias = @host_alias@
host_triplet = @host@
target_alias = @target_alias@
target_triplet = @target@
AMTAR = @AMTAR@
AS = @AS@
AWK = @AWK@
CC = @CC@
CXX = @CXX@
DEPDIR = @DEPDIR@
DLLTOOL = @DLLTOOL@
ECHO = @ECHO@
EXEEXT = @EXEEXT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LIBTOOL = @LIBTOOL@
LN_S = @LN_S@
NET_LIBS = @NET_LIBS@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OPENAL_FLAGS = @OPENAL_FLAGS@
OPENAL_LIBS = @OPENAL_LIBS@
PACKAGE = @PACKAGE@
RANLIB = @RANLIB@
STL_INC_DIR = @STL_INC_DIR@
STRIP = @STRIP@
THREAD_LIB = @THREAD_LIB@
VERSION = @VERSION@
X11_LIBS = @X11_LIBS@
X11_LIBS_XF86VM = @X11_LIBS_XF86VM@
am__include = @am__include@
am__quote = @am__quote@
build_plugins = @build_plugins@
install_sh = @install_sh@

SUBDIRS = pm shadow cloud

rp_src_dir = $(top_srcdir)/../../src

libgfx_la_CXXFLAGS = -prefer-non-pic

noinst_LTLIBRARIES = libgfx.la

libgfx_la_SOURCES = \
	$(rp_src_dir)/gfx/billboard.cpp \
    	$(rp_src_dir)/gfx/camera.cpp \
    	$(rp_src_dir)/gfx/cubemap.cpp \
    	$(rp_src_dir)/gfx/dynamic_texture.cpp \
    	$(rp_src_dir)/gfx/effects.cpp \
    	$(rp_src_dir)/gfx/envmapper.cpp \
    	$(rp_src_dir)/gfx/exceptions.cpp \
    	$(rp_src_dir)/gfx/fps_meter.cpp \
    	$(rp_src_dir)/gfx/geometry.cpp \
    	$(rp_src_dir)/gfx/gfx.cpp \
    	$(rp_src_dir)/gfx/gfx_init.cpp \
    	$(rp_src_dir)/gfx/gfx_render.cpp \
    	$(rp_src_dir)/gfx/gfx_screenshot.cpp \
    	$(rp_src_dir)/gfx/gfx_simulate.cpp \
    	$(rp_src_dir)/gfx/hud.cpp \
    	$(rp_src_dir)/gfx/instances.cpp \
    	$(rp_src_dir)/gfx/io.cpp \
    	$(rp_src_dir)/gfx/light.cpp \
    	$(rp_src_dir)/gfx/light_mgr.cpp \
    	$(rp_src_dir)/gfx/mesh.cpp \
    	$(rp_src_dir)/gfx/mesh_file.cpp \
    	$(rp_src_dir)/gfx/mesh_file_read.cpp \
    	$(rp_src_dir)/gfx/mesh_mgr.cpp \
    	$(rp_src_dir)/gfx/misc.cpp \
    	$(rp_src_dir)/gfx/particles.cpp \
    	$(rp_src_dir)/gfx/png.cpp \
    	$(rp_src_dir)/gfx/settings.cpp \
    	$(rp_src_dir)/gfx/shaders.cpp \
    	$(rp_src_dir)/gfx/sky.cpp \
    	$(rp_src_dir)/gfx/static_geom.cpp \
    	$(rp_src_dir)/gfx/statistics.cpp \
    	$(rp_src_dir)/gfx/terrain.cpp \
    	$(rp_src_dir)/gfx/texture.cpp \
    	$(rp_src_dir)/gfx/texture_mgr.cpp \
    	$(rp_src_dir)/gfx/vertex_mgr.cpp \
    	$(rp_src_dir)/gfx/water.cpp

subdir = gfx
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
LTLIBRARIES = $(noinst_LTLIBRARIES)

libgfx_la_LDFLAGS =
libgfx_la_LIBADD =
am_libgfx_la_OBJECTS = libgfx_la-billboard.lo libgfx_la-camera.lo \
	libgfx_la-cubemap.lo libgfx_la-dynamic_texture.lo \
	libgfx_la-effects.lo libgfx_la-envmapper.lo \
	libgfx_la-exceptions.lo libgfx_la-fps_meter.lo \
	libgfx_la-geometry.lo libgfx_la-gfx.lo libgfx_la-gfx_init.lo \
	libgfx_la-gfx_render.lo libgfx_la-gfx_screenshot.lo \
	libgfx_la-gfx_simulate.lo libgfx_la-hud.lo \
	libgfx_la-instances.lo libgfx_la-io.lo libgfx_la-light.lo \
	libgfx_la-light_mgr.lo libgfx_la-mesh.lo libgfx_la-mesh_file.lo \
	libgfx_la-mesh_file_read.lo libgfx_la-mesh_mgr.lo \
	libgfx_la-misc.lo libgfx_la-particles.lo libgfx_la-png.lo \
	libgfx_la-settings.lo libgfx_la-shaders.lo libgfx_la-sky.lo \
	libgfx_la-static_geom.lo libgfx_la-statistics.lo \
	libgfx_la-terrain.lo libgfx_la-texture.lo \
	libgfx_la-texture_mgr.lo libgfx_la-vertex_mgr.lo \
	libgfx_la-water.lo
libgfx_la_OBJECTS = $(am_libgfx_la_OBJECTS)

DEFS = @DEFS@
DEFAULT_INCLUDES =  -I. -I$(srcdir) -I$(top_builddir)
CPPFLAGS = @CPPFLAGS@
LDFLAGS = @LDFLAGS@
LIBS = @LIBS@
depcomp = $(SHELL) $(top_srcdir)/depcomp
@AMDEP_TRUE@DEP_FILES = $(DEPDIR)/libgfx_la-billboard.Plo \
@AMDEP_TRUE@	$(DEPDIR)/libgfx_la-camera.Plo \
@AMDEP_TRUE@	$(DEPDIR)/libgfx_la-cubemap.Plo \
@AMDEP_TRUE@	$(DEPDIR)/libgfx_la-dynamic_texture.Plo \
@AMDEP_TRUE@	$(DEPDIR)/libgfx_la-effects.Plo \
@AMDEP_TRUE@	$(DEPDIR)/libgfx_la-envmapper.Plo \
@AMDEP_TRUE@	$(DEPDIR)/libgfx_la-exceptions.Plo \
@AMDEP_TRUE@	$(DEPDIR)/libgfx_la-fps_meter.Plo \
@AMDEP_TRUE@	$(DEPDIR)/libgfx_la-geometry.Plo \
@AMDEP_TRUE@	$(DEPDIR)/libgfx_la-gfx.Plo \
@AMDEP_TRUE@	$(DEPDIR)/libgfx_la-gfx_init.Plo \
@AMDEP_TRUE@	$(DEPDIR)/libgfx_la-gfx_render.Plo \
@AMDEP_TRUE@	$(DEPDIR)/libgfx_la-gfx_screenshot.Plo \
@AMDEP_TRUE@	$(DEPDIR)/libgfx_la-gfx_simulate.Plo \
@AMDEP_TRUE@	$(DEPDIR)/libgfx_la-hud.Plo \
@AMDEP_TRUE@	$(DEPDIR)/libgfx_la-instances.Plo \
@AMDEP_TRUE@	$(DEPDIR)/libgfx_la-io.Plo \
@AMDEP_TRUE@	$(DEPDIR)/libgfx_la-light.Plo \
@AMDEP_TRUE@	$(DEPDIR)/libgfx_la-light_mgr.Plo \
@AMDEP_TRUE@	$(DEPDIR)/libgfx_la-mesh.Plo \
@AMDEP_TRUE@	$(DEPDIR)/libgfx_la-mesh_file.Plo \
@AMDEP_TRUE@	$(DEPDIR)/libgfx_la-mesh_file_read.Plo \
@AMDEP_TRUE@	$(DEPDIR)/libgfx_la-mesh_mgr.Plo \
@AMDEP_TRUE@	$(DEPDIR)/libgfx_la-misc.Plo \
@AMDEP_TRUE@	$(DEPDIR)/libgfx_la-particles.Plo \
@AMDEP_TRUE@	$(DEPDIR)/libgfx_la-png.Plo \
@AMDEP_TRUE@	$(DEPDIR)/libgfx_la-settings.Plo \
@AMDEP_TRUE@	$(DEPDIR)/libgfx_la-shaders.Plo \
@AMDEP_TRUE@	$(DEPDIR)/libgfx_la-sky.Plo \
@AMDEP_TRUE@	$(DEPDIR)/libgfx_la-static_geom.Plo \
@AMDEP_TRUE@	$(DEPDIR)/libgfx_la-statistics.Plo \
@AMDEP_TRUE@	$(DEPDIR)/libgfx_la-terrain.Plo \
@AMDEP_TRUE@	$(DEPDIR)/libgfx_la-texture.Plo \
@AMDEP_TRUE@	$(DEPDIR)/libgfx_la-texture_mgr.Plo \
@AMDEP_TRUE@	$(DEPDIR)/libgfx_la-vertex_mgr.Plo \
@AMDEP_TRUE@	$(DEPDIR)/libgfx_la-water.Plo
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
CXXFLAGS = @CXXFLAGS@
DIST_SOURCES = $(libgfx_la_SOURCES)

RECURSIVE_TARGETS = info-recursive dvi-recursive install-info-recursive \
	uninstall-info-recursive all-recursive install-data-recursive \
	install-exec-recursive installdirs-recursive install-recursive \
	uninstall-recursive check-recursive installcheck-recursive
DIST_COMMON = Makefile.am Makefile.in
DIST_SUBDIRS = $(SUBDIRS)
SOURCES = $(libgfx_la_SOURCES)

all: all-recursive

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
$(srcdir)/Makefile.in:  Makefile.am  $(top_srcdir)/configure.in $(ACLOCAL_M4)
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  gfx/Makefile
Makefile:  $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) && \
	  CONFIG_HEADERS= CONFIG_LINKS= \
	  CONFIG_FILES=$(subdir)/$@ $(SHELL) ./config.status

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
libgfx_la-billboard.lo: $(rp_src_dir)/gfx/billboard.cpp
libgfx_la-camera.lo: $(rp_src_dir)/gfx/camera.cpp
libgfx_la-cubemap.lo: $(rp_src_dir)/gfx/cubemap.cpp
libgfx_la-dynamic_texture.lo: $(rp_src_dir)/gfx/dynamic_texture.cpp
libgfx_la-effects.lo: $(rp_src_dir)/gfx/effects.cpp
libgfx_la-envmapper.lo: $(rp_src_dir)/gfx/envmapper.cpp
libgfx_la-exceptions.lo: $(rp_src_dir)/gfx/exceptions.cpp
libgfx_la-fps_meter.lo: $(rp_src_dir)/gfx/fps_meter.cpp
libgfx_la-geometry.lo: $(rp_src_dir)/gfx/geometry.cpp
libgfx_la-gfx.lo: $(rp_src_dir)/gfx/gfx.cpp
libgfx_la-gfx_init.lo: $(rp_src_dir)/gfx/gfx_init.cpp
libgfx_la-gfx_render.lo: $(rp_src_dir)/gfx/gfx_render.cpp
libgfx_la-gfx_screenshot.lo: $(rp_src_dir)/gfx/gfx_screenshot.cpp
libgfx_la-gfx_simulate.lo: $(rp_src_dir)/gfx/gfx_simulate.cpp
libgfx_la-hud.lo: $(rp_src_dir)/gfx/hud.cpp
libgfx_la-instances.lo: $(rp_src_dir)/gfx/instances.cpp
libgfx_la-io.lo: $(rp_src_dir)/gfx/io.cpp
libgfx_la-light.lo: $(rp_src_dir)/gfx/light.cpp
libgfx_la-light_mgr.lo: $(rp_src_dir)/gfx/light_mgr.cpp
libgfx_la-mesh.lo: $(rp_src_dir)/gfx/mesh.cpp
libgfx_la-mesh_file.lo: $(rp_src_dir)/gfx/mesh_file.cpp
libgfx_la-mesh_file_read.lo: $(rp_src_dir)/gfx/mesh_file_read.cpp
libgfx_la-mesh_mgr.lo: $(rp_src_dir)/gfx/mesh_mgr.cpp
libgfx_la-misc.lo: $(rp_src_dir)/gfx/misc.cpp
libgfx_la-particles.lo: $(rp_src_dir)/gfx/particles.cpp
libgfx_la-png.lo: $(rp_src_dir)/gfx/png.cpp
libgfx_la-settings.lo: $(rp_src_dir)/gfx/settings.cpp
libgfx_la-shaders.lo: $(rp_src_dir)/gfx/shaders.cpp
libgfx_la-sky.lo: $(rp_src_dir)/gfx/sky.cpp
libgfx_la-static_geom.lo: $(rp_src_dir)/gfx/static_geom.cpp
libgfx_la-statistics.lo: $(rp_src_dir)/gfx/statistics.cpp
libgfx_la-terrain.lo: $(rp_src_dir)/gfx/terrain.cpp
libgfx_la-texture.lo: $(rp_src_dir)/gfx/texture.cpp
libgfx_la-texture_mgr.lo: $(rp_src_dir)/gfx/texture_mgr.cpp
libgfx_la-vertex_mgr.lo: $(rp_src_dir)/gfx/vertex_mgr.cpp
libgfx_la-water.lo: $(rp_src_dir)/gfx/water.cpp
libgfx.la: $(libgfx_la_OBJECTS) $(libgfx_la_DEPENDENCIES) 
	$(CXXLINK)  $(libgfx_la_LDFLAGS) $(libgfx_la_OBJECTS) $(libgfx_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT) core *.core

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/libgfx_la-billboard.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/libgfx_la-camera.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/libgfx_la-cubemap.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/libgfx_la-dynamic_texture.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/libgfx_la-effects.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/libgfx_la-envmapper.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/libgfx_la-exceptions.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/libgfx_la-fps_meter.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/libgfx_la-geometry.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/libgfx_la-gfx.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/libgfx_la-gfx_init.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/libgfx_la-gfx_render.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/libgfx_la-gfx_screenshot.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/libgfx_la-gfx_simulate.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/libgfx_la-hud.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/libgfx_la-instances.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/libgfx_la-io.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/libgfx_la-light.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/libgfx_la-light_mgr.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/libgfx_la-mesh.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/libgfx_la-mesh_file.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/libgfx_la-mesh_file_read.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/libgfx_la-mesh_mgr.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/libgfx_la-misc.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/libgfx_la-particles.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/libgfx_la-png.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/libgfx_la-settings.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/libgfx_la-shaders.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/libgfx_la-sky.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/libgfx_la-static_geom.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/libgfx_la-statistics.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/libgfx_la-terrain.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/libgfx_la-texture.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/libgfx_la-texture_mgr.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/libgfx_la-vertex_mgr.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/libgfx_la-water.Plo@am__quote@

distclean-depend:
	-rm -rf $(DEPDIR)

.cpp.o:
@AMDEP_TRUE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXXCOMPILE) -c -o $@ `test -f $< || echo '$(srcdir)/'`$<

.cpp.obj:
@AMDEP_TRUE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXXCOMPILE) -c -o $@ `cygpath -w $<`

.cpp.lo:
@AMDEP_TRUE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/$*.Plo' tmpdepfile='$(DEPDIR)/$*.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LTCXXCOMPILE) -c -o $@ `test -f $< || echo '$(srcdir)/'`$<

libgfx_la-billboard.o: $(rp_src_dir)/gfx/billboard.cpp
@AMDEP_TRUE@	source='$(rp_src_dir)/gfx/billboard.cpp' object='libgfx_la-billboard.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgfx_la-billboard.Po' tmpdepfile='$(DEPDIR)/libgfx_la-billboard.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgfx_la_CXXFLAGS) $(CXXFLAGS) -c -o libgfx_la-billboard.o `test -f $(rp_src_dir)/gfx/billboard.cpp || echo '$(srcdir)/'`$(rp_src_dir)/gfx/billboard.cpp

libgfx_la-billboard.obj: $(rp_src_dir)/gfx/billboard.cpp
@AMDEP_TRUE@	source='$(rp_src_dir)/gfx/billboard.cpp' object='libgfx_la-billboard.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgfx_la-billboard.Po' tmpdepfile='$(DEPDIR)/libgfx_la-billboard.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgfx_la_CXXFLAGS) $(CXXFLAGS) -c -o libgfx_la-billboard.obj `cygpath -w $(rp_src_dir)/gfx/billboard.cpp`

libgfx_la-billboard.lo: $(rp_src_dir)/gfx/billboard.cpp
@AMDEP_TRUE@	source='$(rp_src_dir)/gfx/billboard.cpp' object='libgfx_la-billboard.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgfx_la-billboard.Plo' tmpdepfile='$(DEPDIR)/libgfx_la-billboard.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgfx_la_CXXFLAGS) $(CXXFLAGS) -c -o libgfx_la-billboard.lo `test -f $(rp_src_dir)/gfx/billboard.cpp || echo '$(srcdir)/'`$(rp_src_dir)/gfx/billboard.cpp

libgfx_la-camera.o: $(rp_src_dir)/gfx/camera.cpp
@AMDEP_TRUE@	source='$(rp_src_dir)/gfx/camera.cpp' object='libgfx_la-camera.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgfx_la-camera.Po' tmpdepfile='$(DEPDIR)/libgfx_la-camera.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgfx_la_CXXFLAGS) $(CXXFLAGS) -c -o libgfx_la-camera.o `test -f $(rp_src_dir)/gfx/camera.cpp || echo '$(srcdir)/'`$(rp_src_dir)/gfx/camera.cpp

libgfx_la-camera.obj: $(rp_src_dir)/gfx/camera.cpp
@AMDEP_TRUE@	source='$(rp_src_dir)/gfx/camera.cpp' object='libgfx_la-camera.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgfx_la-camera.Po' tmpdepfile='$(DEPDIR)/libgfx_la-camera.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgfx_la_CXXFLAGS) $(CXXFLAGS) -c -o libgfx_la-camera.obj `cygpath -w $(rp_src_dir)/gfx/camera.cpp`

libgfx_la-camera.lo: $(rp_src_dir)/gfx/camera.cpp
@AMDEP_TRUE@	source='$(rp_src_dir)/gfx/camera.cpp' object='libgfx_la-camera.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgfx_la-camera.Plo' tmpdepfile='$(DEPDIR)/libgfx_la-camera.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgfx_la_CXXFLAGS) $(CXXFLAGS) -c -o libgfx_la-camera.lo `test -f $(rp_src_dir)/gfx/camera.cpp || echo '$(srcdir)/'`$(rp_src_dir)/gfx/camera.cpp

libgfx_la-cubemap.o: $(rp_src_dir)/gfx/cubemap.cpp
@AMDEP_TRUE@	source='$(rp_src_dir)/gfx/cubemap.cpp' object='libgfx_la-cubemap.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgfx_la-cubemap.Po' tmpdepfile='$(DEPDIR)/libgfx_la-cubemap.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgfx_la_CXXFLAGS) $(CXXFLAGS) -c -o libgfx_la-cubemap.o `test -f $(rp_src_dir)/gfx/cubemap.cpp || echo '$(srcdir)/'`$(rp_src_dir)/gfx/cubemap.cpp

libgfx_la-cubemap.obj: $(rp_src_dir)/gfx/cubemap.cpp
@AMDEP_TRUE@	source='$(rp_src_dir)/gfx/cubemap.cpp' object='libgfx_la-cubemap.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgfx_la-cubemap.Po' tmpdepfile='$(DEPDIR)/libgfx_la-cubemap.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgfx_la_CXXFLAGS) $(CXXFLAGS) -c -o libgfx_la-cubemap.obj `cygpath -w $(rp_src_dir)/gfx/cubemap.cpp`

libgfx_la-cubemap.lo: $(rp_src_dir)/gfx/cubemap.cpp
@AMDEP_TRUE@	source='$(rp_src_dir)/gfx/cubemap.cpp' object='libgfx_la-cubemap.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgfx_la-cubemap.Plo' tmpdepfile='$(DEPDIR)/libgfx_la-cubemap.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgfx_la_CXXFLAGS) $(CXXFLAGS) -c -o libgfx_la-cubemap.lo `test -f $(rp_src_dir)/gfx/cubemap.cpp || echo '$(srcdir)/'`$(rp_src_dir)/gfx/cubemap.cpp

libgfx_la-dynamic_texture.o: $(rp_src_dir)/gfx/dynamic_texture.cpp
@AMDEP_TRUE@	source='$(rp_src_dir)/gfx/dynamic_texture.cpp' object='libgfx_la-dynamic_texture.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgfx_la-dynamic_texture.Po' tmpdepfile='$(DEPDIR)/libgfx_la-dynamic_texture.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgfx_la_CXXFLAGS) $(CXXFLAGS) -c -o libgfx_la-dynamic_texture.o `test -f $(rp_src_dir)/gfx/dynamic_texture.cpp || echo '$(srcdir)/'`$(rp_src_dir)/gfx/dynamic_texture.cpp

libgfx_la-dynamic_texture.obj: $(rp_src_dir)/gfx/dynamic_texture.cpp
@AMDEP_TRUE@	source='$(rp_src_dir)/gfx/dynamic_texture.cpp' object='libgfx_la-dynamic_texture.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgfx_la-dynamic_texture.Po' tmpdepfile='$(DEPDIR)/libgfx_la-dynamic_texture.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgfx_la_CXXFLAGS) $(CXXFLAGS) -c -o libgfx_la-dynamic_texture.obj `cygpath -w $(rp_src_dir)/gfx/dynamic_texture.cpp`

libgfx_la-dynamic_texture.lo: $(rp_src_dir)/gfx/dynamic_texture.cpp
@AMDEP_TRUE@	source='$(rp_src_dir)/gfx/dynamic_texture.cpp' object='libgfx_la-dynamic_texture.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgfx_la-dynamic_texture.Plo' tmpdepfile='$(DEPDIR)/libgfx_la-dynamic_texture.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgfx_la_CXXFLAGS) $(CXXFLAGS) -c -o libgfx_la-dynamic_texture.lo `test -f $(rp_src_dir)/gfx/dynamic_texture.cpp || echo '$(srcdir)/'`$(rp_src_dir)/gfx/dynamic_texture.cpp

libgfx_la-effects.o: $(rp_src_dir)/gfx/effects.cpp
@AMDEP_TRUE@	source='$(rp_src_dir)/gfx/effects.cpp' object='libgfx_la-effects.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgfx_la-effects.Po' tmpdepfile='$(DEPDIR)/libgfx_la-effects.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgfx_la_CXXFLAGS) $(CXXFLAGS) -c -o libgfx_la-effects.o `test -f $(rp_src_dir)/gfx/effects.cpp || echo '$(srcdir)/'`$(rp_src_dir)/gfx/effects.cpp

libgfx_la-effects.obj: $(rp_src_dir)/gfx/effects.cpp
@AMDEP_TRUE@	source='$(rp_src_dir)/gfx/effects.cpp' object='libgfx_la-effects.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgfx_la-effects.Po' tmpdepfile='$(DEPDIR)/libgfx_la-effects.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgfx_la_CXXFLAGS) $(CXXFLAGS) -c -o libgfx_la-effects.obj `cygpath -w $(rp_src_dir)/gfx/effects.cpp`

libgfx_la-effects.lo: $(rp_src_dir)/gfx/effects.cpp
@AMDEP_TRUE@	source='$(rp_src_dir)/gfx/effects.cpp' object='libgfx_la-effects.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgfx_la-effects.Plo' tmpdepfile='$(DEPDIR)/libgfx_la-effects.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgfx_la_CXXFLAGS) $(CXXFLAGS) -c -o libgfx_la-effects.lo `test -f $(rp_src_dir)/gfx/effects.cpp || echo '$(srcdir)/'`$(rp_src_dir)/gfx/effects.cpp

libgfx_la-envmapper.o: $(rp_src_dir)/gfx/envmapper.cpp
@AMDEP_TRUE@	source='$(rp_src_dir)/gfx/envmapper.cpp' object='libgfx_la-envmapper.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgfx_la-envmapper.Po' tmpdepfile='$(DEPDIR)/libgfx_la-envmapper.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgfx_la_CXXFLAGS) $(CXXFLAGS) -c -o libgfx_la-envmapper.o `test -f $(rp_src_dir)/gfx/envmapper.cpp || echo '$(srcdir)/'`$(rp_src_dir)/gfx/envmapper.cpp

libgfx_la-envmapper.obj: $(rp_src_dir)/gfx/envmapper.cpp
@AMDEP_TRUE@	source='$(rp_src_dir)/gfx/envmapper.cpp' object='libgfx_la-envmapper.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgfx_la-envmapper.Po' tmpdepfile='$(DEPDIR)/libgfx_la-envmapper.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgfx_la_CXXFLAGS) $(CXXFLAGS) -c -o libgfx_la-envmapper.obj `cygpath -w $(rp_src_dir)/gfx/envmapper.cpp`

libgfx_la-envmapper.lo: $(rp_src_dir)/gfx/envmapper.cpp
@AMDEP_TRUE@	source='$(rp_src_dir)/gfx/envmapper.cpp' object='libgfx_la-envmapper.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgfx_la-envmapper.Plo' tmpdepfile='$(DEPDIR)/libgfx_la-envmapper.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgfx_la_CXXFLAGS) $(CXXFLAGS) -c -o libgfx_la-envmapper.lo `test -f $(rp_src_dir)/gfx/envmapper.cpp || echo '$(srcdir)/'`$(rp_src_dir)/gfx/envmapper.cpp

libgfx_la-exceptions.o: $(rp_src_dir)/gfx/exceptions.cpp
@AMDEP_TRUE@	source='$(rp_src_dir)/gfx/exceptions.cpp' object='libgfx_la-exceptions.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgfx_la-exceptions.Po' tmpdepfile='$(DEPDIR)/libgfx_la-exceptions.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgfx_la_CXXFLAGS) $(CXXFLAGS) -c -o libgfx_la-exceptions.o `test -f $(rp_src_dir)/gfx/exceptions.cpp || echo '$(srcdir)/'`$(rp_src_dir)/gfx/exceptions.cpp

libgfx_la-exceptions.obj: $(rp_src_dir)/gfx/exceptions.cpp
@AMDEP_TRUE@	source='$(rp_src_dir)/gfx/exceptions.cpp' object='libgfx_la-exceptions.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgfx_la-exceptions.Po' tmpdepfile='$(DEPDIR)/libgfx_la-exceptions.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgfx_la_CXXFLAGS) $(CXXFLAGS) -c -o libgfx_la-exceptions.obj `cygpath -w $(rp_src_dir)/gfx/exceptions.cpp`

libgfx_la-exceptions.lo: $(rp_src_dir)/gfx/exceptions.cpp
@AMDEP_TRUE@	source='$(rp_src_dir)/gfx/exceptions.cpp' object='libgfx_la-exceptions.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgfx_la-exceptions.Plo' tmpdepfile='$(DEPDIR)/libgfx_la-exceptions.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgfx_la_CXXFLAGS) $(CXXFLAGS) -c -o libgfx_la-exceptions.lo `test -f $(rp_src_dir)/gfx/exceptions.cpp || echo '$(srcdir)/'`$(rp_src_dir)/gfx/exceptions.cpp

libgfx_la-fps_meter.o: $(rp_src_dir)/gfx/fps_meter.cpp
@AMDEP_TRUE@	source='$(rp_src_dir)/gfx/fps_meter.cpp' object='libgfx_la-fps_meter.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgfx_la-fps_meter.Po' tmpdepfile='$(DEPDIR)/libgfx_la-fps_meter.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgfx_la_CXXFLAGS) $(CXXFLAGS) -c -o libgfx_la-fps_meter.o `test -f $(rp_src_dir)/gfx/fps_meter.cpp || echo '$(srcdir)/'`$(rp_src_dir)/gfx/fps_meter.cpp

libgfx_la-fps_meter.obj: $(rp_src_dir)/gfx/fps_meter.cpp
@AMDEP_TRUE@	source='$(rp_src_dir)/gfx/fps_meter.cpp' object='libgfx_la-fps_meter.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgfx_la-fps_meter.Po' tmpdepfile='$(DEPDIR)/libgfx_la-fps_meter.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgfx_la_CXXFLAGS) $(CXXFLAGS) -c -o libgfx_la-fps_meter.obj `cygpath -w $(rp_src_dir)/gfx/fps_meter.cpp`

libgfx_la-fps_meter.lo: $(rp_src_dir)/gfx/fps_meter.cpp
@AMDEP_TRUE@	source='$(rp_src_dir)/gfx/fps_meter.cpp' object='libgfx_la-fps_meter.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgfx_la-fps_meter.Plo' tmpdepfile='$(DEPDIR)/libgfx_la-fps_meter.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgfx_la_CXXFLAGS) $(CXXFLAGS) -c -o libgfx_la-fps_meter.lo `test -f $(rp_src_dir)/gfx/fps_meter.cpp || echo '$(srcdir)/'`$(rp_src_dir)/gfx/fps_meter.cpp

libgfx_la-geometry.o: $(rp_src_dir)/gfx/geometry.cpp
@AMDEP_TRUE@	source='$(rp_src_dir)/gfx/geometry.cpp' object='libgfx_la-geometry.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgfx_la-geometry.Po' tmpdepfile='$(DEPDIR)/libgfx_la-geometry.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgfx_la_CXXFLAGS) $(CXXFLAGS) -c -o libgfx_la-geometry.o `test -f $(rp_src_dir)/gfx/geometry.cpp || echo '$(srcdir)/'`$(rp_src_dir)/gfx/geometry.cpp

libgfx_la-geometry.obj: $(rp_src_dir)/gfx/geometry.cpp
@AMDEP_TRUE@	source='$(rp_src_dir)/gfx/geometry.cpp' object='libgfx_la-geometry.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgfx_la-geometry.Po' tmpdepfile='$(DEPDIR)/libgfx_la-geometry.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgfx_la_CXXFLAGS) $(CXXFLAGS) -c -o libgfx_la-geometry.obj `cygpath -w $(rp_src_dir)/gfx/geometry.cpp`

libgfx_la-geometry.lo: $(rp_src_dir)/gfx/geometry.cpp
@AMDEP_TRUE@	source='$(rp_src_dir)/gfx/geometry.cpp' object='libgfx_la-geometry.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgfx_la-geometry.Plo' tmpdepfile='$(DEPDIR)/libgfx_la-geometry.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgfx_la_CXXFLAGS) $(CXXFLAGS) -c -o libgfx_la-geometry.lo `test -f $(rp_src_dir)/gfx/geometry.cpp || echo '$(srcdir)/'`$(rp_src_dir)/gfx/geometry.cpp

libgfx_la-gfx.o: $(rp_src_dir)/gfx/gfx.cpp
@AMDEP_TRUE@	source='$(rp_src_dir)/gfx/gfx.cpp' object='libgfx_la-gfx.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgfx_la-gfx.Po' tmpdepfile='$(DEPDIR)/libgfx_la-gfx.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgfx_la_CXXFLAGS) $(CXXFLAGS) -c -o libgfx_la-gfx.o `test -f $(rp_src_dir)/gfx/gfx.cpp || echo '$(srcdir)/'`$(rp_src_dir)/gfx/gfx.cpp

libgfx_la-gfx.obj: $(rp_src_dir)/gfx/gfx.cpp
@AMDEP_TRUE@	source='$(rp_src_dir)/gfx/gfx.cpp' object='libgfx_la-gfx.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgfx_la-gfx.Po' tmpdepfile='$(DEPDIR)/libgfx_la-gfx.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgfx_la_CXXFLAGS) $(CXXFLAGS) -c -o libgfx_la-gfx.obj `cygpath -w $(rp_src_dir)/gfx/gfx.cpp`

libgfx_la-gfx.lo: $(rp_src_dir)/gfx/gfx.cpp
@AMDEP_TRUE@	source='$(rp_src_dir)/gfx/gfx.cpp' object='libgfx_la-gfx.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgfx_la-gfx.Plo' tmpdepfile='$(DEPDIR)/libgfx_la-gfx.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgfx_la_CXXFLAGS) $(CXXFLAGS) -c -o libgfx_la-gfx.lo `test -f $(rp_src_dir)/gfx/gfx.cpp || echo '$(srcdir)/'`$(rp_src_dir)/gfx/gfx.cpp

libgfx_la-gfx_init.o: $(rp_src_dir)/gfx/gfx_init.cpp
@AMDEP_TRUE@	source='$(rp_src_dir)/gfx/gfx_init.cpp' object='libgfx_la-gfx_init.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgfx_la-gfx_init.Po' tmpdepfile='$(DEPDIR)/libgfx_la-gfx_init.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgfx_la_CXXFLAGS) $(CXXFLAGS) -c -o libgfx_la-gfx_init.o `test -f $(rp_src_dir)/gfx/gfx_init.cpp || echo '$(srcdir)/'`$(rp_src_dir)/gfx/gfx_init.cpp

libgfx_la-gfx_init.obj: $(rp_src_dir)/gfx/gfx_init.cpp
@AMDEP_TRUE@	source='$(rp_src_dir)/gfx/gfx_init.cpp' object='libgfx_la-gfx_init.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgfx_la-gfx_init.Po' tmpdepfile='$(DEPDIR)/libgfx_la-gfx_init.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgfx_la_CXXFLAGS) $(CXXFLAGS) -c -o libgfx_la-gfx_init.obj `cygpath -w $(rp_src_dir)/gfx/gfx_init.cpp`

libgfx_la-gfx_init.lo: $(rp_src_dir)/gfx/gfx_init.cpp
@AMDEP_TRUE@	source='$(rp_src_dir)/gfx/gfx_init.cpp' object='libgfx_la-gfx_init.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgfx_la-gfx_init.Plo' tmpdepfile='$(DEPDIR)/libgfx_la-gfx_init.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgfx_la_CXXFLAGS) $(CXXFLAGS) -c -o libgfx_la-gfx_init.lo `test -f $(rp_src_dir)/gfx/gfx_init.cpp || echo '$(srcdir)/'`$(rp_src_dir)/gfx/gfx_init.cpp

libgfx_la-gfx_render.o: $(rp_src_dir)/gfx/gfx_render.cpp
@AMDEP_TRUE@	source='$(rp_src_dir)/gfx/gfx_render.cpp' object='libgfx_la-gfx_render.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgfx_la-gfx_render.Po' tmpdepfile='$(DEPDIR)/libgfx_la-gfx_render.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgfx_la_CXXFLAGS) $(CXXFLAGS) -c -o libgfx_la-gfx_render.o `test -f $(rp_src_dir)/gfx/gfx_render.cpp || echo '$(srcdir)/'`$(rp_src_dir)/gfx/gfx_render.cpp

libgfx_la-gfx_render.obj: $(rp_src_dir)/gfx/gfx_render.cpp
@AMDEP_TRUE@	source='$(rp_src_dir)/gfx/gfx_render.cpp' object='libgfx_la-gfx_render.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgfx_la-gfx_render.Po' tmpdepfile='$(DEPDIR)/libgfx_la-gfx_render.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgfx_la_CXXFLAGS) $(CXXFLAGS) -c -o libgfx_la-gfx_render.obj `cygpath -w $(rp_src_dir)/gfx/gfx_render.cpp`

libgfx_la-gfx_render.lo: $(rp_src_dir)/gfx/gfx_render.cpp
@AMDEP_TRUE@	source='$(rp_src_dir)/gfx/gfx_render.cpp' object='libgfx_la-gfx_render.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgfx_la-gfx_render.Plo' tmpdepfile='$(DEPDIR)/libgfx_la-gfx_render.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgfx_la_CXXFLAGS) $(CXXFLAGS) -c -o libgfx_la-gfx_render.lo `test -f $(rp_src_dir)/gfx/gfx_render.cpp || echo '$(srcdir)/'`$(rp_src_dir)/gfx/gfx_render.cpp

libgfx_la-gfx_screenshot.o: $(rp_src_dir)/gfx/gfx_screenshot.cpp
@AMDEP_TRUE@	source='$(rp_src_dir)/gfx/gfx_screenshot.cpp' object='libgfx_la-gfx_screenshot.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgfx_la-gfx_screenshot.Po' tmpdepfile='$(DEPDIR)/libgfx_la-gfx_screenshot.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgfx_la_CXXFLAGS) $(CXXFLAGS) -c -o libgfx_la-gfx_screenshot.o `test -f $(rp_src_dir)/gfx/gfx_screenshot.cpp || echo '$(srcdir)/'`$(rp_src_dir)/gfx/gfx_screenshot.cpp

libgfx_la-gfx_screenshot.obj: $(rp_src_dir)/gfx/gfx_screenshot.cpp
@AMDEP_TRUE@	source='$(rp_src_dir)/gfx/gfx_screenshot.cpp' object='libgfx_la-gfx_screenshot.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgfx_la-gfx_screenshot.Po' tmpdepfile='$(DEPDIR)/libgfx_la-gfx_screenshot.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgfx_la_CXXFLAGS) $(CXXFLAGS) -c -o libgfx_la-gfx_screenshot.obj `cygpath -w $(rp_src_dir)/gfx/gfx_screenshot.cpp`

libgfx_la-gfx_screenshot.lo: $(rp_src_dir)/gfx/gfx_screenshot.cpp
@AMDEP_TRUE@	source='$(rp_src_dir)/gfx/gfx_screenshot.cpp' object='libgfx_la-gfx_screenshot.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgfx_la-gfx_screenshot.Plo' tmpdepfile='$(DEPDIR)/libgfx_la-gfx_screenshot.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgfx_la_CXXFLAGS) $(CXXFLAGS) -c -o libgfx_la-gfx_screenshot.lo `test -f $(rp_src_dir)/gfx/gfx_screenshot.cpp || echo '$(srcdir)/'`$(rp_src_dir)/gfx/gfx_screenshot.cpp

libgfx_la-gfx_simulate.o: $(rp_src_dir)/gfx/gfx_simulate.cpp
@AMDEP_TRUE@	source='$(rp_src_dir)/gfx/gfx_simulate.cpp' object='libgfx_la-gfx_simulate.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgfx_la-gfx_simulate.Po' tmpdepfile='$(DEPDIR)/libgfx_la-gfx_simulate.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgfx_la_CXXFLAGS) $(CXXFLAGS) -c -o libgfx_la-gfx_simulate.o `test -f $(rp_src_dir)/gfx/gfx_simulate.cpp || echo '$(srcdir)/'`$(rp_src_dir)/gfx/gfx_simulate.cpp

libgfx_la-gfx_simulate.obj: $(rp_src_dir)/gfx/gfx_simulate.cpp
@AMDEP_TRUE@	source='$(rp_src_dir)/gfx/gfx_simulate.cpp' object='libgfx_la-gfx_simulate.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgfx_la-gfx_simulate.Po' tmpdepfile='$(DEPDIR)/libgfx_la-gfx_simulate.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgfx_la_CXXFLAGS) $(CXXFLAGS) -c -o libgfx_la-gfx_simulate.obj `cygpath -w $(rp_src_dir)/gfx/gfx_simulate.cpp`

libgfx_la-gfx_simulate.lo: $(rp_src_dir)/gfx/gfx_simulate.cpp
@AMDEP_TRUE@	source='$(rp_src_dir)/gfx/gfx_simulate.cpp' object='libgfx_la-gfx_simulate.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgfx_la-gfx_simulate.Plo' tmpdepfile='$(DEPDIR)/libgfx_la-gfx_simulate.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgfx_la_CXXFLAGS) $(CXXFLAGS) -c -o libgfx_la-gfx_simulate.lo `test -f $(rp_src_dir)/gfx/gfx_simulate.cpp || echo '$(srcdir)/'`$(rp_src_dir)/gfx/gfx_simulate.cpp

libgfx_la-hud.o: $(rp_src_dir)/gfx/hud.cpp
@AMDEP_TRUE@	source='$(rp_src_dir)/gfx/hud.cpp' object='libgfx_la-hud.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgfx_la-hud.Po' tmpdepfile='$(DEPDIR)/libgfx_la-hud.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgfx_la_CXXFLAGS) $(CXXFLAGS) -c -o libgfx_la-hud.o `test -f $(rp_src_dir)/gfx/hud.cpp || echo '$(srcdir)/'`$(rp_src_dir)/gfx/hud.cpp

libgfx_la-hud.obj: $(rp_src_dir)/gfx/hud.cpp
@AMDEP_TRUE@	source='$(rp_src_dir)/gfx/hud.cpp' object='libgfx_la-hud.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgfx_la-hud.Po' tmpdepfile='$(DEPDIR)/libgfx_la-hud.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgfx_la_CXXFLAGS) $(CXXFLAGS) -c -o libgfx_la-hud.obj `cygpath -w $(rp_src_dir)/gfx/hud.cpp`

libgfx_la-hud.lo: $(rp_src_dir)/gfx/hud.cpp
@AMDEP_TRUE@	source='$(rp_src_dir)/gfx/hud.cpp' object='libgfx_la-hud.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgfx_la-hud.Plo' tmpdepfile='$(DEPDIR)/libgfx_la-hud.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgfx_la_CXXFLAGS) $(CXXFLAGS) -c -o libgfx_la-hud.lo `test -f $(rp_src_dir)/gfx/hud.cpp || echo '$(srcdir)/'`$(rp_src_dir)/gfx/hud.cpp

libgfx_la-instances.o: $(rp_src_dir)/gfx/instances.cpp
@AMDEP_TRUE@	source='$(rp_src_dir)/gfx/instances.cpp' object='libgfx_la-instances.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgfx_la-instances.Po' tmpdepfile='$(DEPDIR)/libgfx_la-instances.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgfx_la_CXXFLAGS) $(CXXFLAGS) -c -o libgfx_la-instances.o `test -f $(rp_src_dir)/gfx/instances.cpp || echo '$(srcdir)/'`$(rp_src_dir)/gfx/instances.cpp

libgfx_la-instances.obj: $(rp_src_dir)/gfx/instances.cpp
@AMDEP_TRUE@	source='$(rp_src_dir)/gfx/instances.cpp' object='libgfx_la-instances.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgfx_la-instances.Po' tmpdepfile='$(DEPDIR)/libgfx_la-instances.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgfx_la_CXXFLAGS) $(CXXFLAGS) -c -o libgfx_la-instances.obj `cygpath -w $(rp_src_dir)/gfx/instances.cpp`

libgfx_la-instances.lo: $(rp_src_dir)/gfx/instances.cpp
@AMDEP_TRUE@	source='$(rp_src_dir)/gfx/instances.cpp' object='libgfx_la-instances.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgfx_la-instances.Plo' tmpdepfile='$(DEPDIR)/libgfx_la-instances.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgfx_la_CXXFLAGS) $(CXXFLAGS) -c -o libgfx_la-instances.lo `test -f $(rp_src_dir)/gfx/instances.cpp || echo '$(srcdir)/'`$(rp_src_dir)/gfx/instances.cpp

libgfx_la-io.o: $(rp_src_dir)/gfx/io.cpp
@AMDEP_TRUE@	source='$(rp_src_dir)/gfx/io.cpp' object='libgfx_la-io.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgfx_la-io.Po' tmpdepfile='$(DEPDIR)/libgfx_la-io.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgfx_la_CXXFLAGS) $(CXXFLAGS) -c -o libgfx_la-io.o `test -f $(rp_src_dir)/gfx/io.cpp || echo '$(srcdir)/'`$(rp_src_dir)/gfx/io.cpp

libgfx_la-io.obj: $(rp_src_dir)/gfx/io.cpp
@AMDEP_TRUE@	source='$(rp_src_dir)/gfx/io.cpp' object='libgfx_la-io.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgfx_la-io.Po' tmpdepfile='$(DEPDIR)/libgfx_la-io.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgfx_la_CXXFLAGS) $(CXXFLAGS) -c -o libgfx_la-io.obj `cygpath -w $(rp_src_dir)/gfx/io.cpp`

libgfx_la-io.lo: $(rp_src_dir)/gfx/io.cpp
@AMDEP_TRUE@	source='$(rp_src_dir)/gfx/io.cpp' object='libgfx_la-io.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgfx_la-io.Plo' tmpdepfile='$(DEPDIR)/libgfx_la-io.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgfx_la_CXXFLAGS) $(CXXFLAGS) -c -o libgfx_la-io.lo `test -f $(rp_src_dir)/gfx/io.cpp || echo '$(srcdir)/'`$(rp_src_dir)/gfx/io.cpp

libgfx_la-light.o: $(rp_src_dir)/gfx/light.cpp
@AMDEP_TRUE@	source='$(rp_src_dir)/gfx/light.cpp' object='libgfx_la-light.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgfx_la-light.Po' tmpdepfile='$(DEPDIR)/libgfx_la-light.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgfx_la_CXXFLAGS) $(CXXFLAGS) -c -o libgfx_la-light.o `test -f $(rp_src_dir)/gfx/light.cpp || echo '$(srcdir)/'`$(rp_src_dir)/gfx/light.cpp

libgfx_la-light.obj: $(rp_src_dir)/gfx/light.cpp
@AMDEP_TRUE@	source='$(rp_src_dir)/gfx/light.cpp' object='libgfx_la-light.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgfx_la-light.Po' tmpdepfile='$(DEPDIR)/libgfx_la-light.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgfx_la_CXXFLAGS) $(CXXFLAGS) -c -o libgfx_la-light.obj `cygpath -w $(rp_src_dir)/gfx/light.cpp`

libgfx_la-light.lo: $(rp_src_dir)/gfx/light.cpp
@AMDEP_TRUE@	source='$(rp_src_dir)/gfx/light.cpp' object='libgfx_la-light.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgfx_la-light.Plo' tmpdepfile='$(DEPDIR)/libgfx_la-light.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgfx_la_CXXFLAGS) $(CXXFLAGS) -c -o libgfx_la-light.lo `test -f $(rp_src_dir)/gfx/light.cpp || echo '$(srcdir)/'`$(rp_src_dir)/gfx/light.cpp

libgfx_la-light_mgr.o: $(rp_src_dir)/gfx/light_mgr.cpp
@AMDEP_TRUE@	source='$(rp_src_dir)/gfx/light_mgr.cpp' object='libgfx_la-light_mgr.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgfx_la-light_mgr.Po' tmpdepfile='$(DEPDIR)/libgfx_la-light_mgr.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgfx_la_CXXFLAGS) $(CXXFLAGS) -c -o libgfx_la-light_mgr.o `test -f $(rp_src_dir)/gfx/light_mgr.cpp || echo '$(srcdir)/'`$(rp_src_dir)/gfx/light_mgr.cpp

libgfx_la-light_mgr.obj: $(rp_src_dir)/gfx/light_mgr.cpp
@AMDEP_TRUE@	source='$(rp_src_dir)/gfx/light_mgr.cpp' object='libgfx_la-light_mgr.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgfx_la-light_mgr.Po' tmpdepfile='$(DEPDIR)/libgfx_la-light_mgr.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgfx_la_CXXFLAGS) $(CXXFLAGS) -c -o libgfx_la-light_mgr.obj `cygpath -w $(rp_src_dir)/gfx/light_mgr.cpp`

libgfx_la-light_mgr.lo: $(rp_src_dir)/gfx/light_mgr.cpp
@AMDEP_TRUE@	source='$(rp_src_dir)/gfx/light_mgr.cpp' object='libgfx_la-light_mgr.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgfx_la-light_mgr.Plo' tmpdepfile='$(DEPDIR)/libgfx_la-light_mgr.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgfx_la_CXXFLAGS) $(CXXFLAGS) -c -o libgfx_la-light_mgr.lo `test -f $(rp_src_dir)/gfx/light_mgr.cpp || echo '$(srcdir)/'`$(rp_src_dir)/gfx/light_mgr.cpp

libgfx_la-mesh.o: $(rp_src_dir)/gfx/mesh.cpp
@AMDEP_TRUE@	source='$(rp_src_dir)/gfx/mesh.cpp' object='libgfx_la-mesh.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgfx_la-mesh.Po' tmpdepfile='$(DEPDIR)/libgfx_la-mesh.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgfx_la_CXXFLAGS) $(CXXFLAGS) -c -o libgfx_la-mesh.o `test -f $(rp_src_dir)/gfx/mesh.cpp || echo '$(srcdir)/'`$(rp_src_dir)/gfx/mesh.cpp

libgfx_la-mesh.obj: $(rp_src_dir)/gfx/mesh.cpp
@AMDEP_TRUE@	source='$(rp_src_dir)/gfx/mesh.cpp' object='libgfx_la-mesh.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgfx_la-mesh.Po' tmpdepfile='$(DEPDIR)/libgfx_la-mesh.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgfx_la_CXXFLAGS) $(CXXFLAGS) -c -o libgfx_la-mesh.obj `cygpath -w $(rp_src_dir)/gfx/mesh.cpp`

libgfx_la-mesh.lo: $(rp_src_dir)/gfx/mesh.cpp
@AMDEP_TRUE@	source='$(rp_src_dir)/gfx/mesh.cpp' object='libgfx_la-mesh.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgfx_la-mesh.Plo' tmpdepfile='$(DEPDIR)/libgfx_la-mesh.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgfx_la_CXXFLAGS) $(CXXFLAGS) -c -o libgfx_la-mesh.lo `test -f $(rp_src_dir)/gfx/mesh.cpp || echo '$(srcdir)/'`$(rp_src_dir)/gfx/mesh.cpp

libgfx_la-mesh_file.o: $(rp_src_dir)/gfx/mesh_file.cpp
@AMDEP_TRUE@	source='$(rp_src_dir)/gfx/mesh_file.cpp' object='libgfx_la-mesh_file.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgfx_la-mesh_file.Po' tmpdepfile='$(DEPDIR)/libgfx_la-mesh_file.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgfx_la_CXXFLAGS) $(CXXFLAGS) -c -o libgfx_la-mesh_file.o `test -f $(rp_src_dir)/gfx/mesh_file.cpp || echo '$(srcdir)/'`$(rp_src_dir)/gfx/mesh_file.cpp

libgfx_la-mesh_file.obj: $(rp_src_dir)/gfx/mesh_file.cpp
@AMDEP_TRUE@	source='$(rp_src_dir)/gfx/mesh_file.cpp' object='libgfx_la-mesh_file.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgfx_la-mesh_file.Po' tmpdepfile='$(DEPDIR)/libgfx_la-mesh_file.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgfx_la_CXXFLAGS) $(CXXFLAGS) -c -o libgfx_la-mesh_file.obj `cygpath -w $(rp_src_dir)/gfx/mesh_file.cpp`

libgfx_la-mesh_file.lo: $(rp_src_dir)/gfx/mesh_file.cpp
@AMDEP_TRUE@	source='$(rp_src_dir)/gfx/mesh_file.cpp' object='libgfx_la-mesh_file.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgfx_la-mesh_file.Plo' tmpdepfile='$(DEPDIR)/libgfx_la-mesh_file.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgfx_la_CXXFLAGS) $(CXXFLAGS) -c -o libgfx_la-mesh_file.lo `test -f $(rp_src_dir)/gfx/mesh_file.cpp || echo '$(srcdir)/'`$(rp_src_dir)/gfx/mesh_file.cpp

libgfx_la-mesh_file_read.o: $(rp_src_dir)/gfx/mesh_file_read.cpp
@AMDEP_TRUE@	source='$(rp_src_dir)/gfx/mesh_file_read.cpp' object='libgfx_la-mesh_file_read.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgfx_la-mesh_file_read.Po' tmpdepfile='$(DEPDIR)/libgfx_la-mesh_file_read.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgfx_la_CXXFLAGS) $(CXXFLAGS) -c -o libgfx_la-mesh_file_read.o `test -f $(rp_src_dir)/gfx/mesh_file_read.cpp || echo '$(srcdir)/'`$(rp_src_dir)/gfx/mesh_file_read.cpp

libgfx_la-mesh_file_read.obj: $(rp_src_dir)/gfx/mesh_file_read.cpp
@AMDEP_TRUE@	source='$(rp_src_dir)/gfx/mesh_file_read.cpp' object='libgfx_la-mesh_file_read.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgfx_la-mesh_file_read.Po' tmpdepfile='$(DEPDIR)/libgfx_la-mesh_file_read.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgfx_la_CXXFLAGS) $(CXXFLAGS) -c -o libgfx_la-mesh_file_read.obj `cygpath -w $(rp_src_dir)/gfx/mesh_file_read.cpp`

libgfx_la-mesh_file_read.lo: $(rp_src_dir)/gfx/mesh_file_read.cpp
@AMDEP_TRUE@	source='$(rp_src_dir)/gfx/mesh_file_read.cpp' object='libgfx_la-mesh_file_read.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgfx_la-mesh_file_read.Plo' tmpdepfile='$(DEPDIR)/libgfx_la-mesh_file_read.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgfx_la_CXXFLAGS) $(CXXFLAGS) -c -o libgfx_la-mesh_file_read.lo `test -f $(rp_src_dir)/gfx/mesh_file_read.cpp || echo '$(srcdir)/'`$(rp_src_dir)/gfx/mesh_file_read.cpp

libgfx_la-mesh_mgr.o: $(rp_src_dir)/gfx/mesh_mgr.cpp
@AMDEP_TRUE@	source='$(rp_src_dir)/gfx/mesh_mgr.cpp' object='libgfx_la-mesh_mgr.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgfx_la-mesh_mgr.Po' tmpdepfile='$(DEPDIR)/libgfx_la-mesh_mgr.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgfx_la_CXXFLAGS) $(CXXFLAGS) -c -o libgfx_la-mesh_mgr.o `test -f $(rp_src_dir)/gfx/mesh_mgr.cpp || echo '$(srcdir)/'`$(rp_src_dir)/gfx/mesh_mgr.cpp

libgfx_la-mesh_mgr.obj: $(rp_src_dir)/gfx/mesh_mgr.cpp
@AMDEP_TRUE@	source='$(rp_src_dir)/gfx/mesh_mgr.cpp' object='libgfx_la-mesh_mgr.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgfx_la-mesh_mgr.Po' tmpdepfile='$(DEPDIR)/libgfx_la-mesh_mgr.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgfx_la_CXXFLAGS) $(CXXFLAGS) -c -o libgfx_la-mesh_mgr.obj `cygpath -w $(rp_src_dir)/gfx/mesh_mgr.cpp`

libgfx_la-mesh_mgr.lo: $(rp_src_dir)/gfx/mesh_mgr.cpp
@AMDEP_TRUE@	source='$(rp_src_dir)/gfx/mesh_mgr.cpp' object='libgfx_la-mesh_mgr.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgfx_la-mesh_mgr.Plo' tmpdepfile='$(DEPDIR)/libgfx_la-mesh_mgr.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgfx_la_CXXFLAGS) $(CXXFLAGS) -c -o libgfx_la-mesh_mgr.lo `test -f $(rp_src_dir)/gfx/mesh_mgr.cpp || echo '$(srcdir)/'`$(rp_src_dir)/gfx/mesh_mgr.cpp

libgfx_la-misc.o: $(rp_src_dir)/gfx/misc.cpp
@AMDEP_TRUE@	source='$(rp_src_dir)/gfx/misc.cpp' object='libgfx_la-misc.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgfx_la-misc.Po' tmpdepfile='$(DEPDIR)/libgfx_la-misc.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgfx_la_CXXFLAGS) $(CXXFLAGS) -c -o libgfx_la-misc.o `test -f $(rp_src_dir)/gfx/misc.cpp || echo '$(srcdir)/'`$(rp_src_dir)/gfx/misc.cpp

libgfx_la-misc.obj: $(rp_src_dir)/gfx/misc.cpp
@AMDEP_TRUE@	source='$(rp_src_dir)/gfx/misc.cpp' object='libgfx_la-misc.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgfx_la-misc.Po' tmpdepfile='$(DEPDIR)/libgfx_la-misc.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgfx_la_CXXFLAGS) $(CXXFLAGS) -c -o libgfx_la-misc.obj `cygpath -w $(rp_src_dir)/gfx/misc.cpp`

libgfx_la-misc.lo: $(rp_src_dir)/gfx/misc.cpp
@AMDEP_TRUE@	source='$(rp_src_dir)/gfx/misc.cpp' object='libgfx_la-misc.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgfx_la-misc.Plo' tmpdepfile='$(DEPDIR)/libgfx_la-misc.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgfx_la_CXXFLAGS) $(CXXFLAGS) -c -o libgfx_la-misc.lo `test -f $(rp_src_dir)/gfx/misc.cpp || echo '$(srcdir)/'`$(rp_src_dir)/gfx/misc.cpp

libgfx_la-particles.o: $(rp_src_dir)/gfx/particles.cpp
@AMDEP_TRUE@	source='$(rp_src_dir)/gfx/particles.cpp' object='libgfx_la-particles.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgfx_la-particles.Po' tmpdepfile='$(DEPDIR)/libgfx_la-particles.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgfx_la_CXXFLAGS) $(CXXFLAGS) -c -o libgfx_la-particles.o `test -f $(rp_src_dir)/gfx/particles.cpp || echo '$(srcdir)/'`$(rp_src_dir)/gfx/particles.cpp

libgfx_la-particles.obj: $(rp_src_dir)/gfx/particles.cpp
@AMDEP_TRUE@	source='$(rp_src_dir)/gfx/particles.cpp' object='libgfx_la-particles.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgfx_la-particles.Po' tmpdepfile='$(DEPDIR)/libgfx_la-particles.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgfx_la_CXXFLAGS) $(CXXFLAGS) -c -o libgfx_la-particles.obj `cygpath -w $(rp_src_dir)/gfx/particles.cpp`

libgfx_la-particles.lo: $(rp_src_dir)/gfx/particles.cpp
@AMDEP_TRUE@	source='$(rp_src_dir)/gfx/particles.cpp' object='libgfx_la-particles.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgfx_la-particles.Plo' tmpdepfile='$(DEPDIR)/libgfx_la-particles.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgfx_la_CXXFLAGS) $(CXXFLAGS) -c -o libgfx_la-particles.lo `test -f $(rp_src_dir)/gfx/particles.cpp || echo '$(srcdir)/'`$(rp_src_dir)/gfx/particles.cpp

libgfx_la-png.o: $(rp_src_dir)/gfx/png.cpp
@AMDEP_TRUE@	source='$(rp_src_dir)/gfx/png.cpp' object='libgfx_la-png.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgfx_la-png.Po' tmpdepfile='$(DEPDIR)/libgfx_la-png.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgfx_la_CXXFLAGS) $(CXXFLAGS) -c -o libgfx_la-png.o `test -f $(rp_src_dir)/gfx/png.cpp || echo '$(srcdir)/'`$(rp_src_dir)/gfx/png.cpp

libgfx_la-png.obj: $(rp_src_dir)/gfx/png.cpp
@AMDEP_TRUE@	source='$(rp_src_dir)/gfx/png.cpp' object='libgfx_la-png.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgfx_la-png.Po' tmpdepfile='$(DEPDIR)/libgfx_la-png.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgfx_la_CXXFLAGS) $(CXXFLAGS) -c -o libgfx_la-png.obj `cygpath -w $(rp_src_dir)/gfx/png.cpp`

libgfx_la-png.lo: $(rp_src_dir)/gfx/png.cpp
@AMDEP_TRUE@	source='$(rp_src_dir)/gfx/png.cpp' object='libgfx_la-png.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgfx_la-png.Plo' tmpdepfile='$(DEPDIR)/libgfx_la-png.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgfx_la_CXXFLAGS) $(CXXFLAGS) -c -o libgfx_la-png.lo `test -f $(rp_src_dir)/gfx/png.cpp || echo '$(srcdir)/'`$(rp_src_dir)/gfx/png.cpp

libgfx_la-settings.o: $(rp_src_dir)/gfx/settings.cpp
@AMDEP_TRUE@	source='$(rp_src_dir)/gfx/settings.cpp' object='libgfx_la-settings.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgfx_la-settings.Po' tmpdepfile='$(DEPDIR)/libgfx_la-settings.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgfx_la_CXXFLAGS) $(CXXFLAGS) -c -o libgfx_la-settings.o `test -f $(rp_src_dir)/gfx/settings.cpp || echo '$(srcdir)/'`$(rp_src_dir)/gfx/settings.cpp

libgfx_la-settings.obj: $(rp_src_dir)/gfx/settings.cpp
@AMDEP_TRUE@	source='$(rp_src_dir)/gfx/settings.cpp' object='libgfx_la-settings.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgfx_la-settings.Po' tmpdepfile='$(DEPDIR)/libgfx_la-settings.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgfx_la_CXXFLAGS) $(CXXFLAGS) -c -o libgfx_la-settings.obj `cygpath -w $(rp_src_dir)/gfx/settings.cpp`

libgfx_la-settings.lo: $(rp_src_dir)/gfx/settings.cpp
@AMDEP_TRUE@	source='$(rp_src_dir)/gfx/settings.cpp' object='libgfx_la-settings.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgfx_la-settings.Plo' tmpdepfile='$(DEPDIR)/libgfx_la-settings.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgfx_la_CXXFLAGS) $(CXXFLAGS) -c -o libgfx_la-settings.lo `test -f $(rp_src_dir)/gfx/settings.cpp || echo '$(srcdir)/'`$(rp_src_dir)/gfx/settings.cpp

libgfx_la-shaders.o: $(rp_src_dir)/gfx/shaders.cpp
@AMDEP_TRUE@	source='$(rp_src_dir)/gfx/shaders.cpp' object='libgfx_la-shaders.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgfx_la-shaders.Po' tmpdepfile='$(DEPDIR)/libgfx_la-shaders.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgfx_la_CXXFLAGS) $(CXXFLAGS) -c -o libgfx_la-shaders.o `test -f $(rp_src_dir)/gfx/shaders.cpp || echo '$(srcdir)/'`$(rp_src_dir)/gfx/shaders.cpp

libgfx_la-shaders.obj: $(rp_src_dir)/gfx/shaders.cpp
@AMDEP_TRUE@	source='$(rp_src_dir)/gfx/shaders.cpp' object='libgfx_la-shaders.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgfx_la-shaders.Po' tmpdepfile='$(DEPDIR)/libgfx_la-shaders.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgfx_la_CXXFLAGS) $(CXXFLAGS) -c -o libgfx_la-shaders.obj `cygpath -w $(rp_src_dir)/gfx/shaders.cpp`

libgfx_la-shaders.lo: $(rp_src_dir)/gfx/shaders.cpp
@AMDEP_TRUE@	source='$(rp_src_dir)/gfx/shaders.cpp' object='libgfx_la-shaders.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgfx_la-shaders.Plo' tmpdepfile='$(DEPDIR)/libgfx_la-shaders.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgfx_la_CXXFLAGS) $(CXXFLAGS) -c -o libgfx_la-shaders.lo `test -f $(rp_src_dir)/gfx/shaders.cpp || echo '$(srcdir)/'`$(rp_src_dir)/gfx/shaders.cpp

libgfx_la-sky.o: $(rp_src_dir)/gfx/sky.cpp
@AMDEP_TRUE@	source='$(rp_src_dir)/gfx/sky.cpp' object='libgfx_la-sky.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgfx_la-sky.Po' tmpdepfile='$(DEPDIR)/libgfx_la-sky.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgfx_la_CXXFLAGS) $(CXXFLAGS) -c -o libgfx_la-sky.o `test -f $(rp_src_dir)/gfx/sky.cpp || echo '$(srcdir)/'`$(rp_src_dir)/gfx/sky.cpp

libgfx_la-sky.obj: $(rp_src_dir)/gfx/sky.cpp
@AMDEP_TRUE@	source='$(rp_src_dir)/gfx/sky.cpp' object='libgfx_la-sky.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgfx_la-sky.Po' tmpdepfile='$(DEPDIR)/libgfx_la-sky.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgfx_la_CXXFLAGS) $(CXXFLAGS) -c -o libgfx_la-sky.obj `cygpath -w $(rp_src_dir)/gfx/sky.cpp`

libgfx_la-sky.lo: $(rp_src_dir)/gfx/sky.cpp
@AMDEP_TRUE@	source='$(rp_src_dir)/gfx/sky.cpp' object='libgfx_la-sky.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgfx_la-sky.Plo' tmpdepfile='$(DEPDIR)/libgfx_la-sky.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgfx_la_CXXFLAGS) $(CXXFLAGS) -c -o libgfx_la-sky.lo `test -f $(rp_src_dir)/gfx/sky.cpp || echo '$(srcdir)/'`$(rp_src_dir)/gfx/sky.cpp

libgfx_la-static_geom.o: $(rp_src_dir)/gfx/static_geom.cpp
@AMDEP_TRUE@	source='$(rp_src_dir)/gfx/static_geom.cpp' object='libgfx_la-static_geom.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgfx_la-static_geom.Po' tmpdepfile='$(DEPDIR)/libgfx_la-static_geom.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgfx_la_CXXFLAGS) $(CXXFLAGS) -c -o libgfx_la-static_geom.o `test -f $(rp_src_dir)/gfx/static_geom.cpp || echo '$(srcdir)/'`$(rp_src_dir)/gfx/static_geom.cpp

libgfx_la-static_geom.obj: $(rp_src_dir)/gfx/static_geom.cpp
@AMDEP_TRUE@	source='$(rp_src_dir)/gfx/static_geom.cpp' object='libgfx_la-static_geom.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgfx_la-static_geom.Po' tmpdepfile='$(DEPDIR)/libgfx_la-static_geom.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgfx_la_CXXFLAGS) $(CXXFLAGS) -c -o libgfx_la-static_geom.obj `cygpath -w $(rp_src_dir)/gfx/static_geom.cpp`

libgfx_la-static_geom.lo: $(rp_src_dir)/gfx/static_geom.cpp
@AMDEP_TRUE@	source='$(rp_src_dir)/gfx/static_geom.cpp' object='libgfx_la-static_geom.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgfx_la-static_geom.Plo' tmpdepfile='$(DEPDIR)/libgfx_la-static_geom.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgfx_la_CXXFLAGS) $(CXXFLAGS) -c -o libgfx_la-static_geom.lo `test -f $(rp_src_dir)/gfx/static_geom.cpp || echo '$(srcdir)/'`$(rp_src_dir)/gfx/static_geom.cpp

libgfx_la-statistics.o: $(rp_src_dir)/gfx/statistics.cpp
@AMDEP_TRUE@	source='$(rp_src_dir)/gfx/statistics.cpp' object='libgfx_la-statistics.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgfx_la-statistics.Po' tmpdepfile='$(DEPDIR)/libgfx_la-statistics.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgfx_la_CXXFLAGS) $(CXXFLAGS) -c -o libgfx_la-statistics.o `test -f $(rp_src_dir)/gfx/statistics.cpp || echo '$(srcdir)/'`$(rp_src_dir)/gfx/statistics.cpp

libgfx_la-statistics.obj: $(rp_src_dir)/gfx/statistics.cpp
@AMDEP_TRUE@	source='$(rp_src_dir)/gfx/statistics.cpp' object='libgfx_la-statistics.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgfx_la-statistics.Po' tmpdepfile='$(DEPDIR)/libgfx_la-statistics.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgfx_la_CXXFLAGS) $(CXXFLAGS) -c -o libgfx_la-statistics.obj `cygpath -w $(rp_src_dir)/gfx/statistics.cpp`

libgfx_la-statistics.lo: $(rp_src_dir)/gfx/statistics.cpp
@AMDEP_TRUE@	source='$(rp_src_dir)/gfx/statistics.cpp' object='libgfx_la-statistics.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgfx_la-statistics.Plo' tmpdepfile='$(DEPDIR)/libgfx_la-statistics.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgfx_la_CXXFLAGS) $(CXXFLAGS) -c -o libgfx_la-statistics.lo `test -f $(rp_src_dir)/gfx/statistics.cpp || echo '$(srcdir)/'`$(rp_src_dir)/gfx/statistics.cpp

libgfx_la-terrain.o: $(rp_src_dir)/gfx/terrain.cpp
@AMDEP_TRUE@	source='$(rp_src_dir)/gfx/terrain.cpp' object='libgfx_la-terrain.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgfx_la-terrain.Po' tmpdepfile='$(DEPDIR)/libgfx_la-terrain.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgfx_la_CXXFLAGS) $(CXXFLAGS) -c -o libgfx_la-terrain.o `test -f $(rp_src_dir)/gfx/terrain.cpp || echo '$(srcdir)/'`$(rp_src_dir)/gfx/terrain.cpp

libgfx_la-terrain.obj: $(rp_src_dir)/gfx/terrain.cpp
@AMDEP_TRUE@	source='$(rp_src_dir)/gfx/terrain.cpp' object='libgfx_la-terrain.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgfx_la-terrain.Po' tmpdepfile='$(DEPDIR)/libgfx_la-terrain.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgfx_la_CXXFLAGS) $(CXXFLAGS) -c -o libgfx_la-terrain.obj `cygpath -w $(rp_src_dir)/gfx/terrain.cpp`

libgfx_la-terrain.lo: $(rp_src_dir)/gfx/terrain.cpp
@AMDEP_TRUE@	source='$(rp_src_dir)/gfx/terrain.cpp' object='libgfx_la-terrain.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgfx_la-terrain.Plo' tmpdepfile='$(DEPDIR)/libgfx_la-terrain.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgfx_la_CXXFLAGS) $(CXXFLAGS) -c -o libgfx_la-terrain.lo `test -f $(rp_src_dir)/gfx/terrain.cpp || echo '$(srcdir)/'`$(rp_src_dir)/gfx/terrain.cpp

libgfx_la-texture.o: $(rp_src_dir)/gfx/texture.cpp
@AMDEP_TRUE@	source='$(rp_src_dir)/gfx/texture.cpp' object='libgfx_la-texture.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgfx_la-texture.Po' tmpdepfile='$(DEPDIR)/libgfx_la-texture.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgfx_la_CXXFLAGS) $(CXXFLAGS) -c -o libgfx_la-texture.o `test -f $(rp_src_dir)/gfx/texture.cpp || echo '$(srcdir)/'`$(rp_src_dir)/gfx/texture.cpp

libgfx_la-texture.obj: $(rp_src_dir)/gfx/texture.cpp
@AMDEP_TRUE@	source='$(rp_src_dir)/gfx/texture.cpp' object='libgfx_la-texture.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgfx_la-texture.Po' tmpdepfile='$(DEPDIR)/libgfx_la-texture.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgfx_la_CXXFLAGS) $(CXXFLAGS) -c -o libgfx_la-texture.obj `cygpath -w $(rp_src_dir)/gfx/texture.cpp`

libgfx_la-texture.lo: $(rp_src_dir)/gfx/texture.cpp
@AMDEP_TRUE@	source='$(rp_src_dir)/gfx/texture.cpp' object='libgfx_la-texture.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgfx_la-texture.Plo' tmpdepfile='$(DEPDIR)/libgfx_la-texture.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgfx_la_CXXFLAGS) $(CXXFLAGS) -c -o libgfx_la-texture.lo `test -f $(rp_src_dir)/gfx/texture.cpp || echo '$(srcdir)/'`$(rp_src_dir)/gfx/texture.cpp

libgfx_la-texture_mgr.o: $(rp_src_dir)/gfx/texture_mgr.cpp
@AMDEP_TRUE@	source='$(rp_src_dir)/gfx/texture_mgr.cpp' object='libgfx_la-texture_mgr.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgfx_la-texture_mgr.Po' tmpdepfile='$(DEPDIR)/libgfx_la-texture_mgr.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgfx_la_CXXFLAGS) $(CXXFLAGS) -c -o libgfx_la-texture_mgr.o `test -f $(rp_src_dir)/gfx/texture_mgr.cpp || echo '$(srcdir)/'`$(rp_src_dir)/gfx/texture_mgr.cpp

libgfx_la-texture_mgr.obj: $(rp_src_dir)/gfx/texture_mgr.cpp
@AMDEP_TRUE@	source='$(rp_src_dir)/gfx/texture_mgr.cpp' object='libgfx_la-texture_mgr.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgfx_la-texture_mgr.Po' tmpdepfile='$(DEPDIR)/libgfx_la-texture_mgr.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgfx_la_CXXFLAGS) $(CXXFLAGS) -c -o libgfx_la-texture_mgr.obj `cygpath -w $(rp_src_dir)/gfx/texture_mgr.cpp`

libgfx_la-texture_mgr.lo: $(rp_src_dir)/gfx/texture_mgr.cpp
@AMDEP_TRUE@	source='$(rp_src_dir)/gfx/texture_mgr.cpp' object='libgfx_la-texture_mgr.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgfx_la-texture_mgr.Plo' tmpdepfile='$(DEPDIR)/libgfx_la-texture_mgr.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgfx_la_CXXFLAGS) $(CXXFLAGS) -c -o libgfx_la-texture_mgr.lo `test -f $(rp_src_dir)/gfx/texture_mgr.cpp || echo '$(srcdir)/'`$(rp_src_dir)/gfx/texture_mgr.cpp

libgfx_la-vertex_mgr.o: $(rp_src_dir)/gfx/vertex_mgr.cpp
@AMDEP_TRUE@	source='$(rp_src_dir)/gfx/vertex_mgr.cpp' object='libgfx_la-vertex_mgr.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgfx_la-vertex_mgr.Po' tmpdepfile='$(DEPDIR)/libgfx_la-vertex_mgr.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgfx_la_CXXFLAGS) $(CXXFLAGS) -c -o libgfx_la-vertex_mgr.o `test -f $(rp_src_dir)/gfx/vertex_mgr.cpp || echo '$(srcdir)/'`$(rp_src_dir)/gfx/vertex_mgr.cpp

libgfx_la-vertex_mgr.obj: $(rp_src_dir)/gfx/vertex_mgr.cpp
@AMDEP_TRUE@	source='$(rp_src_dir)/gfx/vertex_mgr.cpp' object='libgfx_la-vertex_mgr.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgfx_la-vertex_mgr.Po' tmpdepfile='$(DEPDIR)/libgfx_la-vertex_mgr.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgfx_la_CXXFLAGS) $(CXXFLAGS) -c -o libgfx_la-vertex_mgr.obj `cygpath -w $(rp_src_dir)/gfx/vertex_mgr.cpp`

libgfx_la-vertex_mgr.lo: $(rp_src_dir)/gfx/vertex_mgr.cpp
@AMDEP_TRUE@	source='$(rp_src_dir)/gfx/vertex_mgr.cpp' object='libgfx_la-vertex_mgr.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgfx_la-vertex_mgr.Plo' tmpdepfile='$(DEPDIR)/libgfx_la-vertex_mgr.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgfx_la_CXXFLAGS) $(CXXFLAGS) -c -o libgfx_la-vertex_mgr.lo `test -f $(rp_src_dir)/gfx/vertex_mgr.cpp || echo '$(srcdir)/'`$(rp_src_dir)/gfx/vertex_mgr.cpp

libgfx_la-water.o: $(rp_src_dir)/gfx/water.cpp
@AMDEP_TRUE@	source='$(rp_src_dir)/gfx/water.cpp' object='libgfx_la-water.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgfx_la-water.Po' tmpdepfile='$(DEPDIR)/libgfx_la-water.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgfx_la_CXXFLAGS) $(CXXFLAGS) -c -o libgfx_la-water.o `test -f $(rp_src_dir)/gfx/water.cpp || echo '$(srcdir)/'`$(rp_src_dir)/gfx/water.cpp

libgfx_la-water.obj: $(rp_src_dir)/gfx/water.cpp
@AMDEP_TRUE@	source='$(rp_src_dir)/gfx/water.cpp' object='libgfx_la-water.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgfx_la-water.Po' tmpdepfile='$(DEPDIR)/libgfx_la-water.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgfx_la_CXXFLAGS) $(CXXFLAGS) -c -o libgfx_la-water.obj `cygpath -w $(rp_src_dir)/gfx/water.cpp`

libgfx_la-water.lo: $(rp_src_dir)/gfx/water.cpp
@AMDEP_TRUE@	source='$(rp_src_dir)/gfx/water.cpp' object='libgfx_la-water.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libgfx_la-water.Plo' tmpdepfile='$(DEPDIR)/libgfx_la-water.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgfx_la_CXXFLAGS) $(CXXFLAGS) -c -o libgfx_la-water.lo `test -f $(rp_src_dir)/gfx/water.cpp || echo '$(srcdir)/'`$(rp_src_dir)/gfx/water.cpp
CXXDEPMODE = @CXXDEPMODE@
uninstall-info-am:

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.
$(RECURSIVE_TARGETS):
	@set fnord $(MAKEFLAGS); amf=$$2; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

mostlyclean-recursive clean-recursive distclean-recursive \
maintainer-clean-recursive:
	@set fnord $(MAKEFLAGS); amf=$$2; \
	dot_seen=no; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	rev=''; for subdir in $$list; do \
	  if test "$$subdir" = "."; then :; else \
	    rev="$$subdir $$rev"; \
	  fi; \
	done; \
	rev="$$rev ."; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique $(LISP)

TAGS: tags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -f $$subdir/TAGS && tags="$$tags -i $$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	list='$(SOURCES) $(HEADERS) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$unique$(LISP)$$tags" \
	  || etags $(ETAGS_ARGS) $$tags  $$unique $(LISP)

GTAGS:
	here=`CDPATH=: && cd $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH

DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)

top_distdir = ..
distdir = $(top_distdir)/$(PACKAGE)-$(VERSION)

distdir: $(DISTFILES)
	@for file in $(DISTFILES); do \
	  if test -f $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    $(mkinstalldirs) "$(distdir)/$$dir"; \
	  fi; \
	  if test -d $$d/$$file; then \
	    cp -pR $$d/$$file $(distdir) \
	    || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
	for subdir in $(SUBDIRS); do \
	  if test "$$subdir" = .; then :; else \
	    test -d $(distdir)/$$subdir \
	    || mkdir $(distdir)/$$subdir \
	    || exit 1; \
	    (cd $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$(top_distdir)" \
	        distdir=../$(distdir)/$$subdir \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-recursive
all-am: Makefile $(LTLIBRARIES)
installdirs: installdirs-recursive
installdirs-am:

install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES) stamp-h stamp-h[0-9]*

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-recursive

clean-am: clean-generic clean-libtool clean-noinstLTLIBRARIES \
	mostlyclean-am

distclean: distclean-recursive

distclean-am: clean-am distclean-compile distclean-depend \
	distclean-generic distclean-libtool distclean-tags

dvi: dvi-recursive

dvi-am:

info: info-recursive

info-am:

install-data-am:

install-exec-am:

install-info: install-info-recursive

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-recursive

maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

uninstall-am: uninstall-info-am

uninstall-info: uninstall-info-recursive

.PHONY: $(RECURSIVE_TARGETS) GTAGS all all-am check check-am clean \
	clean-generic clean-libtool clean-noinstLTLIBRARIES \
	clean-recursive distclean distclean-compile distclean-depend \
	distclean-generic distclean-libtool distclean-recursive \
	distclean-tags distdir dvi dvi-am dvi-recursive info info-am \
	info-recursive install install-am install-data install-data-am \
	install-data-recursive install-exec install-exec-am \
	install-exec-recursive install-info install-info-am \
	install-info-recursive install-man install-recursive \
	install-strip installcheck installcheck-am installdirs \
	installdirs-am installdirs-recursive maintainer-clean \
	maintainer-clean-generic maintainer-clean-recursive mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	mostlyclean-recursive tags tags-recursive uninstall \
	uninstall-am uninstall-info-am uninstall-info-recursive \
	uninstall-recursive

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
