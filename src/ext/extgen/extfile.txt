GL_ARB_multitexture {
glMultiTexCoord1dARB
glMultiTexCoord1dvARB
glMultiTexCoord1fARB
glMultiTexCoord1fvARB
glMultiTexCoord1iARB
glMultiTexCoord1ivARB
glMultiTexCoord1sARB
glMultiTexCoord1svARB
glMultiTexCoord2dARB
glMultiTexCoord2dvARB
glMultiTexCoord2fARB
glMultiTexCoord2fvARB
glMultiTexCoord2iARB
glMultiTexCoord2ivARB
glMultiTexCoord2sARB
glMultiTexCoord2svARB
glMultiTexCoord3dARB
glMultiTexCoord3dvARB
glMultiTexCoord3fARB
glMultiTexCoord3fvARB
glMultiTexCoord3iARB
glMultiTexCoord3ivARB
glMultiTexCoord3sARB
glMultiTexCoord3svARB
glMultiTexCoord4dARB
glMultiTexCoord4dvARB
glMultiTexCoord4fARB
glMultiTexCoord4fvARB
glMultiTexCoord4iARB
glMultiTexCoord4ivARB
glMultiTexCoord4sARB
glMultiTexCoord4svARB
glActiveTextureARB
glClientActiveTextureARB
}

GL_ARB_texture_env_combine {
}

GL_ARB_texture_border_clamp {
}

GL_ARB_texture_compression {
glCompressedTexImage3DARB
glCompressedTexImage2DARB
glCompressedTexImage1DARB
glCompressedTexSubImage3DARB
glCompressedTexSubImage2DARB
glCompressedTexSubImage1DARB
glGetCompressedTexImageARB
}

GL_ARB_texture_cube_map {
}

GL_ARB_transpose_matrix {
glLoadTransposeMatrixfARB
glLoadTransposeMatrixdARB
glMultTransposeMatrixfARB
glMultTransposeMatrixdARB
}

GL_EXT_abgr {
}

GL_EXT_bgra {
}

GL_EXT_blend_color {
glBlendColorEXT
}

GL_EXT_blend_minmax {
glBlendEquationEXT
}

GL_EXT_blend_subtract {
}

GL_EXT_compiled_vertex_array {
glLockArraysEXT
glUnlockArraysEXT
}

GL_EXT_fog_coord {
glFogCoorddEXT
glFogCoorddvEXT
glFogCoordfEXT
glFogCoordfvEXT
glFogCoordPointerEXT
}

GL_EXT_light_max_exponent {
}

GL_EXT_packed_pixels {
}

GL_EXT_paletted_texture {
glColorSubTableEXT
glColorTableEXT
glGetColorTableEXT
glGetColorTableParameterfvEXT
glGetColorTableParameterivEXT
}

GL_EXT_point_parameters {
glPointParameterfEXT
glPointParameterfvEXT
}

GL_EXT_rescale_normal {
}

GL_EXT_secondary_color {
glSecondaryColor3bEXT
glSecondaryColor3bvEXT
glSecondaryColor3dEXT
glSecondaryColor3dvEXT
glSecondaryColor3fEXT
glSecondaryColor3fvEXT
glSecondaryColor3iEXT
glSecondaryColor3ivEXT
glSecondaryColor3sEXT
glSecondaryColor3svEXT
glSecondaryColor3ubEXT
glSecondaryColor3ubvEXT
glSecondaryColor3uiEXT
glSecondaryColor3uivEXT
glSecondaryColor3usEXT
glSecondaryColor3usvEXT
glSecondaryColorPointerEXT
}

GL_EXT_separate_specular_color {
}

GL_EXT_shared_texture_palette {
}

GL_EXT_stencil_wrap {
}

GL_EXT_texture_compression_s3tc {
}

GL_EXT_texture_cube_map {
}

GL_EXT_texture_edge_clamp {
}

GL_EXT_texture_env_add {
}

GL_EXT_texture_env_combine {
}

GL_EXT_texture_filter_anisotropic {
}

GL_EXT_texture_lod_bias {
}

GL_EXT_texture_object {
glAreTexturesResidentEXT
glBindTextureEXT
glDeleteTexturesEXT
glGenTexturesEXT
glIsTextureEXT
glPrioritizeTexturesEXT
}

GL_EXT_texture3D {
glTexImage3DEXT
}

GL_EXT_vertex_array {
glArrayElementEXT
glColorPointerEXT
glEdgeFlagPointerEXT
glGetPointervEXT
glIndexPointerEXT
glNormalPointerEXT
glTexCoordPointerEXT
glVertexPointerEXT
glDrawArraysEXT
}

GL_EXT_vertex_weighting {
glVertexWeightfEXT
glVertexWeightfvEXT
glVertexWeightPointerEXT
}

GL_NV_blend_square {
}

GL_NV_copy_depth_to_color {
}

GL_NV_evaluators {
glMapControlPointsNV
glMapParameterivNV
glMapParameterfvNV
glGetMapControlPointsNV
glGetMapParameterivNV
glGetMapParameterfvNV
glGetMapAttribParameterivNV
glGetMapAttribParameterfvNV
glEvalMapsNV
}

GL_NV_fence {
glGenFencesNV
glDeleteFencesNV
glSetFenceNV
glTestFenceNV
glFinishFenceNV
glIsFenceNV
glGetFenceivNV
}

GL_NV_fog_distance {
}

GL_NV_packed_depth_stencil {
}

GL_NV_register_combiners {
glCombinerParameterfvNV
glCombinerParameterfNV
glCombinerParameterivNV
glCombinerParameteriNV
glCombinerInputNV
glCombinerOutputNV
glFinalCombinerInputNV
glGetCombinerInputParameterfvNV
glGetCombinerInputParameterivNV
glGetCombinerOutputParameterfvNV
glGetCombinerOutputParameterivNV
glGetFinalCombinerInputParameterfvNV
glGetFinalCombinerInputParameterivNV
}

GL_NV_register_combiners2 {
glCombinerStageParameterfvNV
glGetCombinerStageParameterfvNV
}

GL_NV_texgen_reflection {
}

GL_NV_texture_env_combine4 {
}

GL_NV_texture_rectangle {
}

GL_NV_texture_shader {
}

GL_NV_vertex_array_range {
glFlushVertexArrayRangeNV
glVertexArrayRangeNV
wglAllocateMemoryNV
glXAllocateMemoryNV
wglFreeMemoryNV
glXFreeMemoryNV
}

GL_NV_vertex_array_range2 {
}

GL_NV_vertex_program {
glAreProgramsResidentNV
glBindProgramNV
glDeleteProgramsNV
glExecuteProgramNV
glGenProgramsNV
glGetProgramParameterdvNV
glGetProgramParameterfvNV
glGetProgramivNV
glGetProgramStringNV
glGetTrackMatrixivNV
glGetVertexAttribdvNV
glGetVertexAttribfvNV
glGetVertexAttribivNV
glGetVertexAttribPointervNV
glIsProgramNV
glLoadProgramNV
glProgramParameter4dNV
glProgramParameter4dvNV
glProgramParameter4fNV
glProgramParameter4fvNV
glProgramParameters4dvNV
glProgramParameters4fvNV
glRequestResidentProgramsNV
glTrackMatrixNV
glVertexAttribPointerNV
glVertexAttrib1dNV
glVertexAttrib1dvNV
glVertexAttrib1fNV
glVertexAttrib1fvNV
glVertexAttrib1sNV
glVertexAttrib1svNV
glVertexAttrib2dNV
glVertexAttrib2dvNV
glVertexAttrib2fNV
glVertexAttrib2fvNV
glVertexAttrib2sNV
glVertexAttrib2svNV
glVertexAttrib3dNV
glVertexAttrib3dvNV
glVertexAttrib3fNV
glVertexAttrib3fvNV
glVertexAttrib3sNV
glVertexAttrib3svNV
glVertexAttrib4dNV
glVertexAttrib4dvNV
glVertexAttrib4fNV
glVertexAttrib4fvNV
glVertexAttrib4sNV
glVertexAttrib4svNV
glVertexAttrib4ubvNV
glVertexAttribs1dvNV
glVertexAttribs1fvNV
glVertexAttribs1svNV
glVertexAttribs2dvNV
glVertexAttribs2fvNV
glVertexAttribs2svNV
glVertexAttribs3dvNV
glVertexAttribs3fvNV
glVertexAttribs3svNV
glVertexAttribs4dvNV
glVertexAttribs4fvNV
glVertexAttribs4svNV
glVertexAttribs4ubvNV
}

GL_SGIS_generate_mipmap {
}

GL_SGIS_texture_lod {
}

GL_SGIX_depth_texture {
}

GL_SGIX_shadow {
}

GL_VERSION_1_2 {
glBlendColor
glBlendEquation
glDrawRangeElements
glColorTable
glColorTableParameterfv
glColorTableParameteriv
glCopyColorTable
glGetColorTable
glGetColorTableParameterfv
glGetColorTableParameteriv
glTexImage3D
glTexSubImage3D
glCopyTexSubImage3D
}

GL_WIN_swap_hint {
glAddSwapHintRectWIN
}

WGL_ARB_pbuffer {
wglCreatePbufferARB
wglGetPbufferDCARB
wglReleasePbufferDCARB
wglDestroyPbufferARB
wglQueryPbufferARB
}

WGL_ARB_pixel_format {
wglGetPixelFormatAttribivARB
wglGetPixelFormatAttribfvARB
wglChoosePixelFormatARB
}